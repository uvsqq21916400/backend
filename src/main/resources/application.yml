server:
  # Render définit PORT ; en local fallback 8082
  port: ${PORT:8082}

spring:
  datasource:
    # En prod (Render), on lit SPRING_DATASOURCE_*
    # En local, tu peux définir DB_URL/DB_USER/DB_PASSWORD si besoin
    url: ${SPRING_DATASOURCE_URL:${DB_URL:}}
    username: ${SPRING_DATASOURCE_USERNAME:${DB_USER:}}
    password: ${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD:}}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update           # en prod tu peux passer à 'validate' si le schéma est en place
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true
    open-in-view: false

  flyway:
    # Active-la si tu as des migrations ; sinon laisse false
    enabled: ${SPRING_FLYWAY_ENABLED:false}

apis:
  openagenda:
    base-url: ${OPENAGENDA_BASE_URL:https://api.openagenda.com/v2}
    public-key: ${OPENAGENDA_PUBLIC_KEY:}
    agenda-uid: ${OPENAGENDA_AGENDA_UID:}

ga4:
  measurementId: ${GA4_MEASUREMENT_ID:}
  apiSecret: ${GA4_API_SECRET:}

unsplash:
  accessKey: ${UNSPLASH_ACCESS_KEY:}

management:
  endpoints:
    web:
      exposure:
        include: health,info,mappings
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    com.cultureradar: INFO
    org.springframework.web: INFO
